class Solution {
public:
  std::string longestCommonPrefix(std::vector<std::string>& strs) {
        if (strs.empty()) return "";

        // Initialize the prefix with the first string
        std::string prefix = strs[0];

        // Iterate through the strings
        for (size_t i = 1; i < strs.size(); ++i) {
            // Compare the current prefix with the next string
            while (strs[i].find(prefix) != 0) {
                // Reduce the prefix by one character from the end
                prefix = prefix.substr(0, prefix.size() - 1);
                // If the prefix becomes empty, return ""
                if (prefix.empty()) return "";
            }
        }
        return prefix;
    }
};

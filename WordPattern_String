class Solution {
public:
    bool wordPattern(string pattern, string s) {
        vector<string> words;
           unordered_map<char, int> indexP;
        unordered_map<string, int> indexW;
        istringstream iss(s);
        string word;
        while(iss >> word){
            words.push_back(word);
        }

        if(pattern.length() != words.size()){
            return false;
        }
         for(int  i = 0 ; i<pattern.length() ; i++){
            if(indexP[pattern[i]] != indexW[words[i]]){
                return false;
            }
            indexP[pattern[i]] = i+1;
            indexW[words[i]]  = i+1;
            
         }
         return true;

        
    }
};

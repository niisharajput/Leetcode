/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==nullptr||head->next==nullptr||k  == 0){
            return head;
        }

        ListNode*current = head;
         int length =1;

         while(current->next!=nullptr){
            length++;
            current = current->next;          
         }

         current->next = head;
         k = k%length;
         int skip = length-k;
         ListNode *newTail = current;

         while(skip--){
            newTail = newTail->next;
         }
         ListNode*newHead = newTail->next;


         newTail->next = nullptr;

         return newHead;
        
    }
};
